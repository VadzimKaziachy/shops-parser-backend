version: '3.7'

services:
  nginx:
    image: nginx:1.15
    restart: always
    volumes:
      - ../volumes/logs:/var/log/nginx
      - ../src/static:/var/backend/static
      - ../src/media:/var/backend/media
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/uwsgi_params:/etc/nginx/conf.d/uwsgi_params
    ports:
      - 8001:8001
    depends_on:
      - postgres
      - backend

  postgres:
    image: postgres:11.2
    env_file: .env
    volumes:
      - ../volumes/postgres/data:/var/lib/postgresql/data  #save database

  backend:
    build:
      context: backend
    working_dir: ${COMPOSE_PROJECT_DIR}/src
    env_file: .env
    entrypoint:
      - ../docker/backend/wait-for-it.sh
      - ../docker/backend/entrypoint.sh
    volumes:
      - ../:${COMPOSE_PROJECT_DIR}
    expose:
      - 8000
    depends_on:
      - postgres

  redis:
    image: redis:6.0-rc
    restart: always
    command: redis-server
    expose:
      - 6379
    depends_on:
      - backend

  handler_product_queue:
    build:
      context: backend
    working_dir: ${COMPOSE_PROJECT_DIR}/src
    env_file: .env
    command: "celery -A core worker -l INFO -Q start_handler_product_queue"
    volumes:
      - ../src:${COMPOSE_PROJECT_DIR}/src
    depends_on:
      - redis

  scheduler_parsing_shop:
    build:
      context: backend
    working_dir: ${COMPOSE_PROJECT_DIR}/src
    env_file: .env
    command: "celery -A core worker -B -l INFO"
    volumes:
      - ../src:${COMPOSE_PROJECT_DIR}/src
    depends_on:
      - redis

